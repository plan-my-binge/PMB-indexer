input {
  jdbc {
    jdbc_connection_string => "jdbc:postgresql://"
    jdbc_user => "user"
    jdbc_password => "jdbc_password"
    # The path to downloaded jdbc driver
    jdbc_driver_library => "/usr/share/logstash/data/postgresql-42.2.12.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    # The path to the file containing the query
    statement => "select * from series_metrics"
  }
}

filter {
  aggregate {
    task_id => "%{seriesid}"
    code => "
    map['pmb_id'] = event.get('pmb_id')
    map['seriesid'] = event.get('seriesid')
    map['primaryTitle'] = event.get('primarytitle')
    map['startYear'] = event.get('startyear')
    map['endYear'] = event.get('endyear')
    map['genres'] = event.get('genres')
    map['averageRating'] = event.get('averagerating')
    map['landscapePoster'] = event.get('landscapeposter')
    map['portraitPoster'] = event.get('portraitposter')
    map['perEpisodeRuntime'] = event.get('perepisoderuntime')
    map['seasons'] ||= []
    map['seasons'] << {
      'season' => event.get('seasonnumber'),
      'numberOfEpisodes' => event.get('numberofepisodes'),
      'seasonRuntime' => event.get('seasonruntime')
    }
    event.cancel()"
    push_previous_map_as_event => true
    timeout => 30
  }
}

output {
  elasticsearch {
    document_id => "%{seriesid}"
    document_type => "series"
    index => "binge"
    codec => "json"
    user => "user"
    password => "password"
    hosts => ["host"]
  }
}